//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The cert-manager Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	metadata "github.com/cert-manager/trust-manager-csi-driver/internal/api/metadata"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Metadata)(nil), (*metadata.Metadata)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Metadata_To_metadata_Metadata(a.(*Metadata), b.(*metadata.Metadata), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*metadata.Metadata)(nil), (*Metadata)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_metadata_Metadata_To_v1alpha1_Metadata(a.(*metadata.Metadata), b.(*Metadata), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Output)(nil), (*metadata.Output)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Output_To_metadata_Output(a.(*Output), b.(*metadata.Output), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*metadata.Output)(nil), (*Output)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_metadata_Output_To_v1alpha1_Output(a.(*metadata.Output), b.(*Output), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Metadata_To_metadata_Metadata(in *Metadata, out *metadata.Metadata, s conversion.Scope) error {
	out.VolumeID = in.VolumeID
	out.PodNamespace = in.PodNamespace
	out.Bundle = in.Bundle
	out.Outputs = *(*[]metadata.Output)(unsafe.Pointer(&in.Outputs))
	return nil
}

// Convert_v1alpha1_Metadata_To_metadata_Metadata is an autogenerated conversion function.
func Convert_v1alpha1_Metadata_To_metadata_Metadata(in *Metadata, out *metadata.Metadata, s conversion.Scope) error {
	return autoConvert_v1alpha1_Metadata_To_metadata_Metadata(in, out, s)
}

func autoConvert_metadata_Metadata_To_v1alpha1_Metadata(in *metadata.Metadata, out *Metadata, s conversion.Scope) error {
	out.VolumeID = in.VolumeID
	out.PodNamespace = in.PodNamespace
	out.Bundle = in.Bundle
	out.Outputs = *(*[]Output)(unsafe.Pointer(&in.Outputs))
	return nil
}

// Convert_metadata_Metadata_To_v1alpha1_Metadata is an autogenerated conversion function.
func Convert_metadata_Metadata_To_v1alpha1_Metadata(in *metadata.Metadata, out *Metadata, s conversion.Scope) error {
	return autoConvert_metadata_Metadata_To_v1alpha1_Metadata(in, out, s)
}

func autoConvert_v1alpha1_Output_To_metadata_Output(in *Output, out *metadata.Output, s conversion.Scope) error {
	out.Format = metadata.OutputFormat(in.Format)
	out.UID = (*int64)(unsafe.Pointer(in.UID))
	out.GID = (*int64)(unsafe.Pointer(in.GID))
	out.Path = in.Path
	return nil
}

// Convert_v1alpha1_Output_To_metadata_Output is an autogenerated conversion function.
func Convert_v1alpha1_Output_To_metadata_Output(in *Output, out *metadata.Output, s conversion.Scope) error {
	return autoConvert_v1alpha1_Output_To_metadata_Output(in, out, s)
}

func autoConvert_metadata_Output_To_v1alpha1_Output(in *metadata.Output, out *Output, s conversion.Scope) error {
	out.Format = OutputFormat(in.Format)
	out.UID = (*int64)(unsafe.Pointer(in.UID))
	out.GID = (*int64)(unsafe.Pointer(in.GID))
	out.Path = in.Path
	return nil
}

// Convert_metadata_Output_To_v1alpha1_Output is an autogenerated conversion function.
func Convert_metadata_Output_To_v1alpha1_Output(in *metadata.Output, out *Output, s conversion.Scope) error {
	return autoConvert_metadata_Output_To_v1alpha1_Output(in, out, s)
}
